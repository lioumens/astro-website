---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';
import TagList from '../../components/TagList.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
    // replace with getCollection("blog") when using content collections
//   const allPosts = await Astro.glob('../posts/*.md');
const allPosts = await getCollection("blog");

  // retrieve all tags from all posts
  const uniqueTags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

  // iterate over tags and return the array of objects
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.data.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts }, // the return of filtered posts here is mapped to posts (which is the prop below)
    };
  });
// example of returning every route manually
//   return [
//     {params: {tag: "astro"}, props: {posts: allPosts}},
//     {params: {tag: "successes"}, props: {posts: allPosts}},
//     {params: {tag: "community"}, props: {posts: allPosts}},
//     {params: {tag: "blogging"}, props: {posts: allPosts}},
//     {params: {tag: "setbacks"}, props: {posts: allPosts}},
//     {params: {tag: "learning in public"}, props: {posts: allPosts}}
//   ]
}

const dateFormatter = new Intl.DateTimeFormat("en-gb", { year: 'numeric', month: 'long', day: 'numeric' })

// Astro.params is special here because it dynamically is doing the routes
const { tag } = Astro.params;
const { posts } = Astro.props; // posts here is actually the filtered posts from above

const activeNav = 3;
// console.log(posts)
---
<BaseLayout pageTitle={tag} activeNav={activeNav}>
    <h2> Posts with the tag</h2> <TagList tags={[tag]} tagSize=2 tagDisplay="inline"/>
    <hr />
  <ul>
    {posts.map((post) => <BlogPost url={"/blog/" + post.slug} title={post.data.title} date={dateFormatter.format(post.data.pubDate)} tags={post.data.tags} />)}
  </ul>
</BaseLayout>

<style lang="scss">
    ul {
        padding: 0px;
    }
    h2 {
      display: inline;
    }
</style>